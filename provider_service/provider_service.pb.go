// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: provider_service/provider_service.proto

package provider_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProviderElement struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Alias                string   `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Domain               string   `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProviderElement) Reset()         { *m = ProviderElement{} }
func (m *ProviderElement) String() string { return proto.CompactTextString(m) }
func (*ProviderElement) ProtoMessage()    {}
func (*ProviderElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f5d256b19f92f75, []int{0}
}
func (m *ProviderElement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProviderElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProviderElement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProviderElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProviderElement.Merge(m, src)
}
func (m *ProviderElement) XXX_Size() int {
	return m.Size()
}
func (m *ProviderElement) XXX_DiscardUnknown() {
	xxx_messageInfo_ProviderElement.DiscardUnknown(m)
}

var xxx_messageInfo_ProviderElement proto.InternalMessageInfo

func (m *ProviderElement) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ProviderElement) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *ProviderElement) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProviderElement) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type ProvidersSelectElement struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Label                string   `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProvidersSelectElement) Reset()         { *m = ProvidersSelectElement{} }
func (m *ProvidersSelectElement) String() string { return proto.CompactTextString(m) }
func (*ProvidersSelectElement) ProtoMessage()    {}
func (*ProvidersSelectElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f5d256b19f92f75, []int{1}
}
func (m *ProvidersSelectElement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProvidersSelectElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProvidersSelectElement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProvidersSelectElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvidersSelectElement.Merge(m, src)
}
func (m *ProvidersSelectElement) XXX_Size() int {
	return m.Size()
}
func (m *ProvidersSelectElement) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvidersSelectElement.DiscardUnknown(m)
}

var xxx_messageInfo_ProvidersSelectElement proto.InternalMessageInfo

func (m *ProvidersSelectElement) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ProvidersSelectElement) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type GetProviderByIDRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Trace                string   `protobuf:"bytes,2,opt,name=trace,proto3" json:"trace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProviderByIDRequest) Reset()         { *m = GetProviderByIDRequest{} }
func (m *GetProviderByIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetProviderByIDRequest) ProtoMessage()    {}
func (*GetProviderByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f5d256b19f92f75, []int{2}
}
func (m *GetProviderByIDRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetProviderByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetProviderByIDRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetProviderByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProviderByIDRequest.Merge(m, src)
}
func (m *GetProviderByIDRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetProviderByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProviderByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProviderByIDRequest proto.InternalMessageInfo

func (m *GetProviderByIDRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetProviderByIDRequest) GetTrace() string {
	if m != nil {
		return m.Trace
	}
	return ""
}

type GetProviderByIDResponse struct {
	Provider             *ProviderElement `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetProviderByIDResponse) Reset()         { *m = GetProviderByIDResponse{} }
func (m *GetProviderByIDResponse) String() string { return proto.CompactTextString(m) }
func (*GetProviderByIDResponse) ProtoMessage()    {}
func (*GetProviderByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f5d256b19f92f75, []int{3}
}
func (m *GetProviderByIDResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetProviderByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetProviderByIDResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetProviderByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProviderByIDResponse.Merge(m, src)
}
func (m *GetProviderByIDResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetProviderByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProviderByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProviderByIDResponse proto.InternalMessageInfo

func (m *GetProviderByIDResponse) GetProvider() *ProviderElement {
	if m != nil {
		return m.Provider
	}
	return nil
}

type GetProvidersListRequest struct {
	Trace                string   `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProvidersListRequest) Reset()         { *m = GetProvidersListRequest{} }
func (m *GetProvidersListRequest) String() string { return proto.CompactTextString(m) }
func (*GetProvidersListRequest) ProtoMessage()    {}
func (*GetProvidersListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f5d256b19f92f75, []int{4}
}
func (m *GetProvidersListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetProvidersListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetProvidersListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetProvidersListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProvidersListRequest.Merge(m, src)
}
func (m *GetProvidersListRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetProvidersListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProvidersListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProvidersListRequest proto.InternalMessageInfo

func (m *GetProvidersListRequest) GetTrace() string {
	if m != nil {
		return m.Trace
	}
	return ""
}

func (m *GetProvidersListRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetProvidersListRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type GetProvidersListResponse struct {
	Items                []*ProviderElement `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Count                int32              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetProvidersListResponse) Reset()         { *m = GetProvidersListResponse{} }
func (m *GetProvidersListResponse) String() string { return proto.CompactTextString(m) }
func (*GetProvidersListResponse) ProtoMessage()    {}
func (*GetProvidersListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f5d256b19f92f75, []int{5}
}
func (m *GetProvidersListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetProvidersListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetProvidersListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetProvidersListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProvidersListResponse.Merge(m, src)
}
func (m *GetProvidersListResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetProvidersListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProvidersListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProvidersListResponse proto.InternalMessageInfo

func (m *GetProvidersListResponse) GetItems() []*ProviderElement {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *GetProvidersListResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetProvidersSelectListRequest struct {
	Trace                string   `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProvidersSelectListRequest) Reset()         { *m = GetProvidersSelectListRequest{} }
func (m *GetProvidersSelectListRequest) String() string { return proto.CompactTextString(m) }
func (*GetProvidersSelectListRequest) ProtoMessage()    {}
func (*GetProvidersSelectListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f5d256b19f92f75, []int{6}
}
func (m *GetProvidersSelectListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetProvidersSelectListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetProvidersSelectListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetProvidersSelectListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProvidersSelectListRequest.Merge(m, src)
}
func (m *GetProvidersSelectListRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetProvidersSelectListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProvidersSelectListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProvidersSelectListRequest proto.InternalMessageInfo

func (m *GetProvidersSelectListRequest) GetTrace() string {
	if m != nil {
		return m.Trace
	}
	return ""
}

type GetProvidersSelectListResponse struct {
	Items                []*ProvidersSelectElement `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetProvidersSelectListResponse) Reset()         { *m = GetProvidersSelectListResponse{} }
func (m *GetProvidersSelectListResponse) String() string { return proto.CompactTextString(m) }
func (*GetProvidersSelectListResponse) ProtoMessage()    {}
func (*GetProvidersSelectListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f5d256b19f92f75, []int{7}
}
func (m *GetProvidersSelectListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetProvidersSelectListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetProvidersSelectListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetProvidersSelectListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProvidersSelectListResponse.Merge(m, src)
}
func (m *GetProvidersSelectListResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetProvidersSelectListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProvidersSelectListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProvidersSelectListResponse proto.InternalMessageInfo

func (m *GetProvidersSelectListResponse) GetItems() []*ProvidersSelectElement {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*ProviderElement)(nil), "provider_service.ProviderElement")
	proto.RegisterType((*ProvidersSelectElement)(nil), "provider_service.ProvidersSelectElement")
	proto.RegisterType((*GetProviderByIDRequest)(nil), "provider_service.GetProviderByIDRequest")
	proto.RegisterType((*GetProviderByIDResponse)(nil), "provider_service.GetProviderByIDResponse")
	proto.RegisterType((*GetProvidersListRequest)(nil), "provider_service.GetProvidersListRequest")
	proto.RegisterType((*GetProvidersListResponse)(nil), "provider_service.GetProvidersListResponse")
	proto.RegisterType((*GetProvidersSelectListRequest)(nil), "provider_service.GetProvidersSelectListRequest")
	proto.RegisterType((*GetProvidersSelectListResponse)(nil), "provider_service.GetProvidersSelectListResponse")
}

func init() {
	proto.RegisterFile("provider_service/provider_service.proto", fileDescriptor_3f5d256b19f92f75)
}

var fileDescriptor_3f5d256b19f92f75 = []byte{
	// 424 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xcf, 0xaa, 0xda, 0x40,
	0x14, 0xc6, 0x3b, 0xd1, 0x48, 0x3d, 0x85, 0x2a, 0x83, 0xd8, 0x20, 0x34, 0xd8, 0xd9, 0xd4, 0x76,
	0xa1, 0xc5, 0x52, 0xba, 0xaa, 0x0b, 0xb1, 0x94, 0x42, 0x17, 0x25, 0x6e, 0xba, 0x29, 0x6d, 0x4c,
	0x8e, 0x30, 0x90, 0x3f, 0x36, 0x33, 0x0a, 0xa5, 0x2f, 0xd2, 0x47, 0xba, 0xcb, 0xfb, 0x08, 0xf7,
	0x7a, 0x5f, 0xe4, 0xe2, 0x64, 0xe2, 0xcd, 0x1f, 0xf5, 0x66, 0x97, 0xef, 0x30, 0xe7, 0x7c, 0xbf,
	0xf9, 0xe6, 0x10, 0x78, 0xbd, 0x49, 0xe2, 0x1d, 0xf7, 0x31, 0xf9, 0x25, 0x30, 0xd9, 0x71, 0x0f,
	0x27, 0xe5, 0xc2, 0x78, 0x93, 0xc4, 0x32, 0xa6, 0xdd, 0x72, 0x9d, 0x79, 0xd0, 0xf9, 0xae, 0x6b,
	0x9f, 0x03, 0x0c, 0x31, 0x92, 0xf4, 0x39, 0x18, 0xdc, 0xb7, 0xc8, 0x90, 0x8c, 0x4c, 0xc7, 0xe0,
	0x3e, 0xed, 0x81, 0xe9, 0x06, 0xdc, 0x15, 0x96, 0x31, 0x24, 0xa3, 0xb6, 0x93, 0x0a, 0x4a, 0xa1,
	0x19, 0xb9, 0x21, 0x5a, 0x0d, 0x55, 0x54, 0xdf, 0xb4, 0x0f, 0x2d, 0x3f, 0x0e, 0x5d, 0x1e, 0x59,
	0x4d, 0x55, 0xd5, 0x8a, 0x2d, 0xa0, 0x9f, 0x99, 0x88, 0x25, 0x06, 0xe8, 0xc9, 0xcc, 0xab, 0x07,
	0xe6, 0xce, 0x0d, 0xb6, 0xa8, 0xec, 0xda, 0x4e, 0x2a, 0x0e, 0xd5, 0xc0, 0x5d, 0x61, 0x90, 0x39,
	0x2a, 0xc1, 0x66, 0xd0, 0xff, 0x82, 0x32, 0x1b, 0x34, 0xff, 0xfb, 0x75, 0xe1, 0xe0, 0x9f, 0x2d,
	0x8a, 0x93, 0xc4, 0x32, 0x71, 0x3d, 0xcc, 0xfa, 0x95, 0x60, 0x3f, 0xe0, 0x45, 0xa5, 0x5f, 0x6c,
	0xe2, 0x48, 0x20, 0xfd, 0x04, 0x4f, 0xb3, 0x64, 0xd4, 0x98, 0x67, 0xd3, 0x57, 0xe3, 0x4a, 0x84,
	0xa5, 0x9c, 0x9c, 0x63, 0x0b, 0xfb, 0x59, 0x98, 0x2c, 0xbe, 0x71, 0x21, 0x33, 0xb4, 0x23, 0x0a,
	0xc9, 0xa1, 0xa8, 0x0b, 0xf2, 0x90, 0x4b, 0x05, 0x68, 0x3a, 0xa9, 0x38, 0xc4, 0x17, 0xaf, 0xd7,
	0x02, 0xa5, 0x0a, 0xd5, 0x74, 0xb4, 0x62, 0x1c, 0xac, 0xea, 0x78, 0x4d, 0xfe, 0x11, 0x4c, 0x2e,
	0x31, 0x14, 0x16, 0x19, 0x36, 0xea, 0x61, 0xa7, 0xe7, 0x0f, 0x08, 0x5e, 0xbc, 0x8d, 0x8e, 0x08,
	0x4a, 0xb0, 0x0f, 0xf0, 0x32, 0x6f, 0x95, 0x3e, 0xd6, 0xa3, 0xf7, 0x61, 0xbf, 0xc1, 0x3e, 0xd7,
	0xa6, 0x39, 0x67, 0x45, 0xce, 0xd1, 0x79, 0xce, 0xe2, 0x86, 0x68, 0xdc, 0xe9, 0xad, 0xf1, 0xb0,
	0xa8, 0xcb, 0xb4, 0x83, 0xae, 0xa1, 0x53, 0x7a, 0x50, 0x7a, 0x62, 0xee, 0xe9, 0x9d, 0x19, 0xbc,
	0xa9, 0x71, 0x52, 0xb3, 0x73, 0xe8, 0x96, 0xf3, 0xa7, 0x97, 0xdb, 0xf3, 0x2b, 0x30, 0x78, 0x5b,
	0xe7, 0xa8, 0xb6, 0xfa, 0x57, 0xd8, 0xf1, 0x5c, 0x90, 0x74, 0x72, 0x79, 0x4a, 0xe5, 0xa5, 0x06,
	0xef, 0xea, 0x37, 0xa4, 0xe6, 0xf3, 0xee, 0xd5, 0xde, 0x26, 0xd7, 0x7b, 0x9b, 0xdc, 0xec, 0x6d,
	0xf2, 0xff, 0xce, 0x7e, 0xb2, 0x6a, 0xa9, 0xdf, 0xc6, 0xfb, 0xfb, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xb1, 0x17, 0xbd, 0xee, 0x61, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProviderServiceClient is the client API for ProviderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProviderServiceClient interface {
	GetProviderByID(ctx context.Context, in *GetProviderByIDRequest, opts ...grpc.CallOption) (*GetProviderByIDResponse, error)
	GetProvidersList(ctx context.Context, in *GetProvidersListRequest, opts ...grpc.CallOption) (*GetProvidersListResponse, error)
	GetProvidersSelectList(ctx context.Context, in *GetProvidersSelectListRequest, opts ...grpc.CallOption) (*GetProvidersSelectListResponse, error)
}

type providerServiceClient struct {
	cc *grpc.ClientConn
}

func NewProviderServiceClient(cc *grpc.ClientConn) ProviderServiceClient {
	return &providerServiceClient{cc}
}

func (c *providerServiceClient) GetProviderByID(ctx context.Context, in *GetProviderByIDRequest, opts ...grpc.CallOption) (*GetProviderByIDResponse, error) {
	out := new(GetProviderByIDResponse)
	err := c.cc.Invoke(ctx, "/provider_service.ProviderService/GetProviderByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) GetProvidersList(ctx context.Context, in *GetProvidersListRequest, opts ...grpc.CallOption) (*GetProvidersListResponse, error) {
	out := new(GetProvidersListResponse)
	err := c.cc.Invoke(ctx, "/provider_service.ProviderService/GetProvidersList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerServiceClient) GetProvidersSelectList(ctx context.Context, in *GetProvidersSelectListRequest, opts ...grpc.CallOption) (*GetProvidersSelectListResponse, error) {
	out := new(GetProvidersSelectListResponse)
	err := c.cc.Invoke(ctx, "/provider_service.ProviderService/GetProvidersSelectList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProviderServiceServer is the server API for ProviderService service.
type ProviderServiceServer interface {
	GetProviderByID(context.Context, *GetProviderByIDRequest) (*GetProviderByIDResponse, error)
	GetProvidersList(context.Context, *GetProvidersListRequest) (*GetProvidersListResponse, error)
	GetProvidersSelectList(context.Context, *GetProvidersSelectListRequest) (*GetProvidersSelectListResponse, error)
}

// UnimplementedProviderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProviderServiceServer struct {
}

func (*UnimplementedProviderServiceServer) GetProviderByID(ctx context.Context, req *GetProviderByIDRequest) (*GetProviderByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProviderByID not implemented")
}
func (*UnimplementedProviderServiceServer) GetProvidersList(ctx context.Context, req *GetProvidersListRequest) (*GetProvidersListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProvidersList not implemented")
}
func (*UnimplementedProviderServiceServer) GetProvidersSelectList(ctx context.Context, req *GetProvidersSelectListRequest) (*GetProvidersSelectListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProvidersSelectList not implemented")
}

func RegisterProviderServiceServer(s *grpc.Server, srv ProviderServiceServer) {
	s.RegisterService(&_ProviderService_serviceDesc, srv)
}

func _ProviderService_GetProviderByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProviderByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).GetProviderByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider_service.ProviderService/GetProviderByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).GetProviderByID(ctx, req.(*GetProviderByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_GetProvidersList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProvidersListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).GetProvidersList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider_service.ProviderService/GetProvidersList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).GetProvidersList(ctx, req.(*GetProvidersListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProviderService_GetProvidersSelectList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProvidersSelectListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServiceServer).GetProvidersSelectList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider_service.ProviderService/GetProvidersSelectList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServiceServer).GetProvidersSelectList(ctx, req.(*GetProvidersSelectListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProviderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "provider_service.ProviderService",
	HandlerType: (*ProviderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProviderByID",
			Handler:    _ProviderService_GetProviderByID_Handler,
		},
		{
			MethodName: "GetProvidersList",
			Handler:    _ProviderService_GetProvidersList_Handler,
		},
		{
			MethodName: "GetProvidersSelectList",
			Handler:    _ProviderService_GetProvidersSelectList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "provider_service/provider_service.proto",
}

func (m *ProviderElement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProviderElement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProviderElement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Domain) > 0 {
		i -= len(m.Domain)
		copy(dAtA[i:], m.Domain)
		i = encodeVarintProviderService(dAtA, i, uint64(len(m.Domain)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintProviderService(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Alias) > 0 {
		i -= len(m.Alias)
		copy(dAtA[i:], m.Alias)
		i = encodeVarintProviderService(dAtA, i, uint64(len(m.Alias)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintProviderService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ProvidersSelectElement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProvidersSelectElement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProvidersSelectElement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Label) > 0 {
		i -= len(m.Label)
		copy(dAtA[i:], m.Label)
		i = encodeVarintProviderService(dAtA, i, uint64(len(m.Label)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintProviderService(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetProviderByIDRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetProviderByIDRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetProviderByIDRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Trace) > 0 {
		i -= len(m.Trace)
		copy(dAtA[i:], m.Trace)
		i = encodeVarintProviderService(dAtA, i, uint64(len(m.Trace)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintProviderService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetProviderByIDResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetProviderByIDResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetProviderByIDResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Provider != nil {
		{
			size, err := m.Provider.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProviderService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetProvidersListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetProvidersListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetProvidersListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offset != 0 {
		i = encodeVarintProviderService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x18
	}
	if m.Limit != 0 {
		i = encodeVarintProviderService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Trace) > 0 {
		i -= len(m.Trace)
		copy(dAtA[i:], m.Trace)
		i = encodeVarintProviderService(dAtA, i, uint64(len(m.Trace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetProvidersListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetProvidersListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetProvidersListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Count != 0 {
		i = encodeVarintProviderService(dAtA, i, uint64(m.Count))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProviderService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetProvidersSelectListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetProvidersSelectListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetProvidersSelectListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Trace) > 0 {
		i -= len(m.Trace)
		copy(dAtA[i:], m.Trace)
		i = encodeVarintProviderService(dAtA, i, uint64(len(m.Trace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetProvidersSelectListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetProvidersSelectListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetProvidersSelectListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintProviderService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintProviderService(dAtA []byte, offset int, v uint64) int {
	offset -= sovProviderService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ProviderElement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProviderService(uint64(m.Id))
	}
	l = len(m.Alias)
	if l > 0 {
		n += 1 + l + sovProviderService(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovProviderService(uint64(l))
	}
	l = len(m.Domain)
	if l > 0 {
		n += 1 + l + sovProviderService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProvidersSelectElement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovProviderService(uint64(l))
	}
	l = len(m.Label)
	if l > 0 {
		n += 1 + l + sovProviderService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetProviderByIDRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovProviderService(uint64(m.Id))
	}
	l = len(m.Trace)
	if l > 0 {
		n += 1 + l + sovProviderService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetProviderByIDResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Provider != nil {
		l = m.Provider.Size()
		n += 1 + l + sovProviderService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetProvidersListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Trace)
	if l > 0 {
		n += 1 + l + sovProviderService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovProviderService(uint64(m.Limit))
	}
	if m.Offset != 0 {
		n += 1 + sovProviderService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetProvidersListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovProviderService(uint64(l))
		}
	}
	if m.Count != 0 {
		n += 1 + sovProviderService(uint64(m.Count))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetProvidersSelectListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Trace)
	if l > 0 {
		n += 1 + l + sovProviderService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetProvidersSelectListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovProviderService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovProviderService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProviderService(x uint64) (n int) {
	return sovProviderService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProviderElement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProviderService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProviderElement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProviderElement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alias", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProviderService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProviderService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Alias = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProviderService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProviderService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Domain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProviderService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProviderService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Domain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProviderService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProvidersSelectElement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProviderService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProvidersSelectElement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProvidersSelectElement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProviderService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProviderService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProviderService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProviderService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProviderService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetProviderByIDRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProviderService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetProviderByIDRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetProviderByIDRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Trace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProviderService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProviderService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Trace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProviderService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetProviderByIDResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProviderService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetProviderByIDResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetProviderByIDResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProviderService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProviderService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Provider == nil {
				m.Provider = &ProviderElement{}
			}
			if err := m.Provider.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProviderService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetProvidersListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProviderService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetProvidersListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetProvidersListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Trace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProviderService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProviderService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Trace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProviderService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetProvidersListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProviderService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetProvidersListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetProvidersListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProviderService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProviderService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &ProviderElement{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			m.Count = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Count |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipProviderService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetProvidersSelectListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProviderService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetProvidersSelectListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetProvidersSelectListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Trace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProviderService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProviderService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Trace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProviderService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetProvidersSelectListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProviderService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetProvidersSelectListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetProvidersSelectListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProviderService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProviderService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &ProvidersSelectElement{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProviderService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProviderService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProviderService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProviderService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProviderService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProviderService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProviderService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProviderService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProviderService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProviderService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProviderService = fmt.Errorf("proto: unexpected end of group")
)
